# PySNMP SMI module. Autogenerated from smidump -f python JUNIPER-IVE-MIB
# by libsmi2pysnmp-0.1.3 at Tue Aug  5 12:15:34 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( NetworkAddress, ) = mibBuilder.importSymbols("RFC1155-SMI", "NetworkAddress")
( Bits, Counter64, Gauge32, Integer32, Integer32, IpAddress, ModuleIdentity, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, enterprises, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter64", "Gauge32", "Integer32", "Integer32", "IpAddress", "ModuleIdentity", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "enterprises")

# Objects

juniper_ive = ModuleIdentity((1, 3, 6, 1, 4, 1, 12532)).setRevisions(("2012-10-26 10:00",)).setLabel("juniper-ive")
if mibBuilder.loadTexts: juniper_ive.setOrganization("Juniper")
if mibBuilder.loadTexts: juniper_ive.setContactInfo("Internet: https://www.juniper.net/cm/index.jsp")
if mibBuilder.loadTexts: juniper_ive.setDescription("This file defines the private Juniper Networks MIB extensions.")
logFullPercent = MibScalar((1, 3, 6, 1, 4, 1, 12532, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logFullPercent.setDescription("Percentage of log file full")
signedInWebUsers = MibScalar((1, 3, 6, 1, 4, 1, 12532, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: signedInWebUsers.setDescription("Number of Signed-In Web Users")
signedInMailUsers = MibScalar((1, 3, 6, 1, 4, 1, 12532, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: signedInMailUsers.setDescription("Number of Signed-In Mail Users")
blockedIP = MibScalar((1, 3, 6, 1, 4, 1, 12532, 4), IpAddress()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: blockedIP.setDescription("IP Address that is blocked due to consecutive failed login attempts")
authServerName = MibScalar((1, 3, 6, 1, 4, 1, 12532, 5), OctetString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: authServerName.setDescription("Name of an external authentication server")
productName = MibScalar((1, 3, 6, 1, 4, 1, 12532, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: productName.setDescription("IVE Licensed Product Name")
productVersion = MibScalar((1, 3, 6, 1, 4, 1, 12532, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: productVersion.setDescription("IVE System Software Version")
fileName = MibScalar((1, 3, 6, 1, 4, 1, 12532, 8), OctetString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: fileName.setDescription("File name")
meetingUserCount = MibScalar((1, 3, 6, 1, 4, 1, 12532, 9), Gauge32()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: meetingUserCount.setDescription("the number of concurrent meeting users")
iveCpuUtil = MibScalar((1, 3, 6, 1, 4, 1, 12532, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveCpuUtil.setDescription("The CPU Utilization of the IVE system")
iveMemoryUtil = MibScalar((1, 3, 6, 1, 4, 1, 12532, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveMemoryUtil.setDescription("The Memory Utilization of the IVE system")
iveConcurrentUsers = MibScalar((1, 3, 6, 1, 4, 1, 12532, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveConcurrentUsers.setDescription("The Total number of Users Logged In for the IVE Node")
clusterConcurrentUsers = MibScalar((1, 3, 6, 1, 4, 1, 12532, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusterConcurrentUsers.setDescription("The Total number of Users Logged In for the Cluster")
iveTotalHits = MibScalar((1, 3, 6, 1, 4, 1, 12532, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveTotalHits.setDescription("The Total number of hits to the IVE since last reboot")
iveFileHits = MibScalar((1, 3, 6, 1, 4, 1, 12532, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveFileHits.setDescription("The Total number of File hits to the IVE since last reboot")
iveWebHits = MibScalar((1, 3, 6, 1, 4, 1, 12532, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveWebHits.setDescription("The Total number of hits via the Web Interface since the last reboot")
iveAppletHits = MibScalar((1, 3, 6, 1, 4, 1, 12532, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveAppletHits.setDescription("The Total number of applet hits to the IVE  since last reboot")
ivetermHits = MibScalar((1, 3, 6, 1, 4, 1, 12532, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ivetermHits.setDescription("The Total number of terminal hits to the IVE since last reboot")
iveSAMHits = MibScalar((1, 3, 6, 1, 4, 1, 12532, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveSAMHits.setDescription("The Total number of SAM(Secure Application manager)hits of since last reboot")
iveNCHits = MibScalar((1, 3, 6, 1, 4, 1, 12532, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveNCHits.setDescription("The Total number of NC(Network Connect) hits of since last reboot")
meetingHits = MibScalar((1, 3, 6, 1, 4, 1, 12532, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: meetingHits.setDescription("The Total number of Meeting hits of since last reboot")
meetingCount = MibScalar((1, 3, 6, 1, 4, 1, 12532, 22), Gauge32()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: meetingCount.setDescription("the number of concurrent meetings")
logName = MibScalar((1, 3, 6, 1, 4, 1, 12532, 23), OctetString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: logName.setDescription("Name of the log (admin/user/event)")
iveSwapUtil = MibScalar((1, 3, 6, 1, 4, 1, 12532, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveSwapUtil.setDescription("The Swap Utilization of the IVE system")
diskFullPercent = MibScalar((1, 3, 6, 1, 4, 1, 12532, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskFullPercent.setDescription("Percentage of disk space full")
blockedIPList = MibTable((1, 3, 6, 1, 4, 1, 12532, 26))
if mibBuilder.loadTexts: blockedIPList.setDescription("Table of 10 most recently blocked IPs")
ipEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12532, 26, 1)).setIndexNames((0, "JUNIPER-IVE-MIB", "ipIndex"))
if mibBuilder.loadTexts: ipEntry.setDescription("An entry containing a blocked IP")
ipIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 12532, 26, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipIndex.setDescription("Index for IP Table")
ipValue = MibTableColumn((1, 3, 6, 1, 4, 1, 12532, 26, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipValue.setDescription("Blocked IP Entry")
logID = MibScalar((1, 3, 6, 1, 4, 1, 12532, 27), OctetString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: logID.setDescription("The unique ID of the log message.")
logType = MibScalar((1, 3, 6, 1, 4, 1, 12532, 28), OctetString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: logType.setDescription("String stating whether log message is major or critical.")
logDescription = MibScalar((1, 3, 6, 1, 4, 1, 12532, 29), OctetString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: logDescription.setDescription("The actual log message string.")
ivsName = MibScalar((1, 3, 6, 1, 4, 1, 12532, 30), OctetString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: ivsName.setDescription("Virtual System name")
ocspResponderURL = MibScalar((1, 3, 6, 1, 4, 1, 12532, 31), OctetString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: ocspResponderURL.setDescription("Name of an OCSP Responder")
fanDescription = MibScalar((1, 3, 6, 1, 4, 1, 12532, 32), OctetString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: fanDescription.setDescription("The status of the fans")
psDescription = MibScalar((1, 3, 6, 1, 4, 1, 12532, 33), OctetString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: psDescription.setDescription("The status of the power supplies")
raidDescription = MibScalar((1, 3, 6, 1, 4, 1, 12532, 34), OctetString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: raidDescription.setDescription("The status of the RAID")
clusterName = MibScalar((1, 3, 6, 1, 4, 1, 12532, 35), OctetString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: clusterName.setDescription("Cluster Name")
nodeList = MibScalar((1, 3, 6, 1, 4, 1, 12532, 36), OctetString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: nodeList.setDescription("List of disabled nodes")
vipType = MibScalar((1, 3, 6, 1, 4, 1, 12532, 37), OctetString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: vipType.setDescription("Whether the VIP is external or internal")
currentVIP = MibScalar((1, 3, 6, 1, 4, 1, 12532, 38), OctetString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: currentVIP.setDescription("Current value of VIP being changed")
newVIP = MibScalar((1, 3, 6, 1, 4, 1, 12532, 39), OctetString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: newVIP.setDescription("New value for the VIp being changed")
nicEvent = MibScalar((1, 3, 6, 1, 4, 1, 12532, 40), OctetString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: nicEvent.setDescription("Type of event that generated a the Trap: admin, external")
nodeName = MibScalar((1, 3, 6, 1, 4, 1, 12532, 41), OctetString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: nodeName.setDescription("Node Name")
iveTemperature = MibScalar((1, 3, 6, 1, 4, 1, 12532, 42), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveTemperature.setDescription("The Temperature of MAG application blade. Other platform such as SA and IC will return 0")
iveVPNTunnels = MibScalar((1, 3, 6, 1, 4, 1, 12532, 43), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveVPNTunnels.setDescription("The number of concurrent Pulse IPSec and NC users")
iveSSLConnections = MibScalar((1, 3, 6, 1, 4, 1, 12532, 44), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveSSLConnections.setDescription("Total number of SSL connection ")
esapVersion = MibScalar((1, 3, 6, 1, 4, 1, 12532, 45), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esapVersion.setDescription("Active ESAP Version")
vipChangeReason = MibScalar((1, 3, 6, 1, 4, 1, 12532, 46), OctetString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: vipChangeReason.setDescription("Reason for the VIP node change")
iveTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 251))
iveSAProduct = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252))
iveProductSA700 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 1))
iveSA700 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 1, 1))
iveProductSA2000 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 2))
iveSA2000 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 2, 1))
iveProductSA2500 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 3))
iveSA2500 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 3, 1))
iveProductSA4000 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 4))
iveSA4000 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 4, 1))
iveSA4000FIPS = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 4, 2))
iveProductSA4500 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 5))
iveSA4500 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 5, 1))
iveSA4500FIPS = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 5, 2))
iveProductSA6000 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 6))
iveSA6000 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 6, 1))
iveSA6000FIPS = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 6, 2))
iveProductSA6500 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 7))
iveSA6500 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 7, 1))
iveSA6500FIPS = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 7, 2))
iveICProduct = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 253))
iveProductIC4000 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 253, 1))
iveIC4000 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 253, 1, 1))
iveProductIC4500 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 253, 2))
iveIC4500 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 253, 2, 1))
iveProductIC6000 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 253, 3))
iveIC6000 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 253, 3, 1))
iveIC6000FIPS = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 253, 3, 2))
iveProductIC6500 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 253, 4))
iveIC6500 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 253, 4, 1))
iveMAGProduct = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 254))
iveProductMAG2600 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 254, 1))
iveMAG2600 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 254, 1, 1))
iveProductMAG4610 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 254, 2))
iveMAG4610 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 254, 2, 1))
iveProductSM160 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 254, 3))
iveMAGSM160 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 254, 3, 1))
iveProductSM360 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 254, 4))
iveMAGSM360 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 254, 4, 1))
iveVAProduct = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 255))
iveProductVASPE = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 255, 1))
iveVASPE = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 255, 1, 1))
iveProductVADTE = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 255, 2))
iveVADTE = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 255, 2, 1))

# Augmentions

# Notifications

iveLogNearlyFull = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 4)).setObjects(*(("JUNIPER-IVE-MIB", "logName"), ("JUNIPER-IVE-MIB", "logFullPercent"), ) )
if mibBuilder.loadTexts: iveLogNearlyFull.setDescription("Log file nearly full")
iveLogFull = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 5)).setObjects(*(("JUNIPER-IVE-MIB", "logName"), ) )
if mibBuilder.loadTexts: iveLogFull.setDescription("Log file full")
iveMaxConcurrentUsersSignedIn = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 6)).setObjects(*() )
if mibBuilder.loadTexts: iveMaxConcurrentUsersSignedIn.setDescription("Maximum number of concurrent users signed in")
iveTooManyFailedLoginAttempts = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 7)).setObjects(*(("JUNIPER-IVE-MIB", "blockedIP"), ) )
if mibBuilder.loadTexts: iveTooManyFailedLoginAttempts.setDescription("Too many failed login attempts")
externalAuthServerUnreachable = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 8)).setObjects(*(("JUNIPER-IVE-MIB", "authServerName"), ) )
if mibBuilder.loadTexts: externalAuthServerUnreachable.setDescription("External authentication server is not responding")
iveStart = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 9)).setObjects(*() )
if mibBuilder.loadTexts: iveStart.setDescription("IVE startup under administrator's instruction.")
iveShutdown = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 10)).setObjects(*() )
if mibBuilder.loadTexts: iveShutdown.setDescription("IVE shutdown under administrator's instruction.")
iveReboot = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 11)).setObjects(*() )
if mibBuilder.loadTexts: iveReboot.setDescription("IVE reboot under administrator's instruction.")
archiveServerUnreachable = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 12)).setObjects(*() )
if mibBuilder.loadTexts: archiveServerUnreachable.setDescription("Archive server is not responding")
archiveServerLoginFailed = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 13)).setObjects(*() )
if mibBuilder.loadTexts: archiveServerLoginFailed.setDescription("Could not login into archive server. Verify FTP username and password.")
archiveFileTransferFailed = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 14)).setObjects(*(("JUNIPER-IVE-MIB", "fileName"), ) )
if mibBuilder.loadTexts: archiveFileTransferFailed.setDescription("Could not store file on archive server")
meetingUserLimit = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 15)).setObjects(*(("JUNIPER-IVE-MIB", "meetingUserCount"), ) )
if mibBuilder.loadTexts: meetingUserLimit.setDescription("Concurrent user count over license limit")
iveRestart = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 16)).setObjects(*() )
if mibBuilder.loadTexts: iveRestart.setDescription("IVE has restarted under administrator's instruction.")
meetingLimit = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 17)).setObjects(*(("JUNIPER-IVE-MIB", "meetingCount"), ) )
if mibBuilder.loadTexts: meetingLimit.setDescription("Concurrent meeting count over license limit")
iveDiskNearlyFull = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 18)).setObjects(*(("JUNIPER-IVE-MIB", "diskFullPercent"), ) )
if mibBuilder.loadTexts: iveDiskNearlyFull.setDescription("Disk space nearly full")
iveDiskFull = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 19)).setObjects(*() )
if mibBuilder.loadTexts: iveDiskFull.setDescription("Disk space full")
logMessageTrap = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 20)).setObjects(*(("JUNIPER-IVE-MIB", "logID"), ("JUNIPER-IVE-MIB", "logType"), ("JUNIPER-IVE-MIB", "logDescription"), ) )
if mibBuilder.loadTexts: logMessageTrap.setDescription("The TRAP generated from a log message.")
memUtilNotify = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 21)).setObjects(*(("JUNIPER-IVE-MIB", "iveMemoryUtil"), ) )
if mibBuilder.loadTexts: memUtilNotify.setDescription("IVE memory utilization above threshold")
cpuUtilNotify = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 22)).setObjects(*(("JUNIPER-IVE-MIB", "iveCpuUtil"), ) )
if mibBuilder.loadTexts: cpuUtilNotify.setDescription("IVE CPU utilization above threshold")
swapUtilNotify = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 23)).setObjects(*(("JUNIPER-IVE-MIB", "iveSwapUtil"), ) )
if mibBuilder.loadTexts: swapUtilNotify.setDescription("IVE swap utilization above threshold")
iveMaxConcurrentUsersVirtualSystem = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 24)).setObjects(*(("JUNIPER-IVE-MIB", "ivsName"), ) )
if mibBuilder.loadTexts: iveMaxConcurrentUsersVirtualSystem.setDescription("Maximum number of concurrent Virtual System users signed in")
ocspResponderConnectionFailed = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 25)).setObjects(*(("JUNIPER-IVE-MIB", "ocspResponderURL"), ) )
if mibBuilder.loadTexts: ocspResponderConnectionFailed.setDescription("OCSP Responder cannot be connected")
iveFanNotify = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 26)).setObjects(*(("JUNIPER-IVE-MIB", "fanDescription"), ) )
if mibBuilder.loadTexts: iveFanNotify.setDescription("The status of the fans has changed")
ivePowerSupplyNotify = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 27)).setObjects(*(("JUNIPER-IVE-MIB", "psDescription"), ) )
if mibBuilder.loadTexts: ivePowerSupplyNotify.setDescription("The status of the power supplies has changed")
iveRaidNotify = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 28)).setObjects(*(("JUNIPER-IVE-MIB", "raidDescription"), ) )
if mibBuilder.loadTexts: iveRaidNotify.setDescription("The status of the RAID has changed")
iveClusterDisableNodeTrap = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 29)).setObjects(*(("JUNIPER-IVE-MIB", "clusterName"), ("JUNIPER-IVE-MIB", "nodeList"), ) )
if mibBuilder.loadTexts: iveClusterDisableNodeTrap.setDescription("A Given node(s) in a cluster has(have) been disabled")
iveClusterChangedVIPTrap = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 30)).setObjects(*(("JUNIPER-IVE-MIB", "currentVIP"), ("JUNIPER-IVE-MIB", "newVIP"), ("JUNIPER-IVE-MIB", "vipType"), ) )
if mibBuilder.loadTexts: iveClusterChangedVIPTrap.setDescription("A external/internal VIP has changed from its current value to a new one")
iveNetExternalInterfaceDownTrap = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 31)).setObjects(*(("JUNIPER-IVE-MIB", "nicEvent"), ) )
if mibBuilder.loadTexts: iveNetExternalInterfaceDownTrap.setDescription("The External interface has gone down, reason is in nicEvent")
iveClusterDeleteTrap = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 32)).setObjects(*(("JUNIPER-IVE-MIB", "nodeName"), ) )
if mibBuilder.loadTexts: iveClusterDeleteTrap.setDescription("Cluster delete inititaed by nodeName")
iveNetInternalInterfaceDownTrap = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 33)).setObjects(*(("JUNIPER-IVE-MIB", "nicEvent"), ) )
if mibBuilder.loadTexts: iveNetInternalInterfaceDownTrap.setDescription("The Internal interface has gone down, reason is in nicEvent")
iveNetManagementInterfaceDownTrap = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 34)).setObjects(*(("JUNIPER-IVE-MIB", "nicEvent"), ) )
if mibBuilder.loadTexts: iveNetManagementInterfaceDownTrap.setDescription("The Management interface has gone down, reason is in nicEvent")
iveTemperatureNotify = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 35)).setObjects(*(("JUNIPER-IVE-MIB", "iveTemperature"), ) )
if mibBuilder.loadTexts: iveTemperatureNotify.setDescription("IVE Temperature is above threshold")
iveVIPNodeChanged = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 36)).setObjects(*(("JUNIPER-IVE-MIB", "nodeName"), ("JUNIPER-IVE-MIB", "vipChangeReason"), ) )
if mibBuilder.loadTexts: iveVIPNodeChanged.setDescription("Notifies that VIP node has changed. \nnodeName is the new node which is hosting the VIP.\nvipChangeReason specifies the reason for the change.")

# Exports

# Module identity
mibBuilder.exportSymbols("JUNIPER-IVE-MIB", PYSNMP_MODULE_ID=juniper_ive)

# Objects
mibBuilder.exportSymbols("JUNIPER-IVE-MIB", juniper_ive=juniper_ive, logFullPercent=logFullPercent, signedInWebUsers=signedInWebUsers, signedInMailUsers=signedInMailUsers, blockedIP=blockedIP, authServerName=authServerName, productName=productName, productVersion=productVersion, fileName=fileName, meetingUserCount=meetingUserCount, iveCpuUtil=iveCpuUtil, iveMemoryUtil=iveMemoryUtil, iveConcurrentUsers=iveConcurrentUsers, clusterConcurrentUsers=clusterConcurrentUsers, iveTotalHits=iveTotalHits, iveFileHits=iveFileHits, iveWebHits=iveWebHits, iveAppletHits=iveAppletHits, ivetermHits=ivetermHits, iveSAMHits=iveSAMHits, iveNCHits=iveNCHits, meetingHits=meetingHits, meetingCount=meetingCount, logName=logName, iveSwapUtil=iveSwapUtil, diskFullPercent=diskFullPercent, blockedIPList=blockedIPList, ipEntry=ipEntry, ipIndex=ipIndex, ipValue=ipValue, logID=logID, logType=logType, logDescription=logDescription, ivsName=ivsName, ocspResponderURL=ocspResponderURL, fanDescription=fanDescription, psDescription=psDescription, raidDescription=raidDescription, clusterName=clusterName, nodeList=nodeList, vipType=vipType, currentVIP=currentVIP, newVIP=newVIP, nicEvent=nicEvent, nodeName=nodeName, iveTemperature=iveTemperature, iveVPNTunnels=iveVPNTunnels, iveSSLConnections=iveSSLConnections, esapVersion=esapVersion, vipChangeReason=vipChangeReason, iveTraps=iveTraps, iveSAProduct=iveSAProduct, iveProductSA700=iveProductSA700, iveSA700=iveSA700, iveProductSA2000=iveProductSA2000, iveSA2000=iveSA2000, iveProductSA2500=iveProductSA2500, iveSA2500=iveSA2500, iveProductSA4000=iveProductSA4000, iveSA4000=iveSA4000, iveSA4000FIPS=iveSA4000FIPS, iveProductSA4500=iveProductSA4500, iveSA4500=iveSA4500, iveSA4500FIPS=iveSA4500FIPS, iveProductSA6000=iveProductSA6000, iveSA6000=iveSA6000, iveSA6000FIPS=iveSA6000FIPS, iveProductSA6500=iveProductSA6500, iveSA6500=iveSA6500, iveSA6500FIPS=iveSA6500FIPS, iveICProduct=iveICProduct, iveProductIC4000=iveProductIC4000, iveIC4000=iveIC4000, iveProductIC4500=iveProductIC4500, iveIC4500=iveIC4500, iveProductIC6000=iveProductIC6000, iveIC6000=iveIC6000, iveIC6000FIPS=iveIC6000FIPS, iveProductIC6500=iveProductIC6500, iveIC6500=iveIC6500, iveMAGProduct=iveMAGProduct, iveProductMAG2600=iveProductMAG2600, iveMAG2600=iveMAG2600, iveProductMAG4610=iveProductMAG4610, iveMAG4610=iveMAG4610, iveProductSM160=iveProductSM160, iveMAGSM160=iveMAGSM160, iveProductSM360=iveProductSM360, iveMAGSM360=iveMAGSM360, iveVAProduct=iveVAProduct, iveProductVASPE=iveProductVASPE, iveVASPE=iveVASPE, iveProductVADTE=iveProductVADTE, iveVADTE=iveVADTE)

# Notifications
mibBuilder.exportSymbols("JUNIPER-IVE-MIB", iveLogNearlyFull=iveLogNearlyFull, iveLogFull=iveLogFull, iveMaxConcurrentUsersSignedIn=iveMaxConcurrentUsersSignedIn, iveTooManyFailedLoginAttempts=iveTooManyFailedLoginAttempts, externalAuthServerUnreachable=externalAuthServerUnreachable, iveStart=iveStart, iveShutdown=iveShutdown, iveReboot=iveReboot, archiveServerUnreachable=archiveServerUnreachable, archiveServerLoginFailed=archiveServerLoginFailed, archiveFileTransferFailed=archiveFileTransferFailed, meetingUserLimit=meetingUserLimit, iveRestart=iveRestart, meetingLimit=meetingLimit, iveDiskNearlyFull=iveDiskNearlyFull, iveDiskFull=iveDiskFull, logMessageTrap=logMessageTrap, memUtilNotify=memUtilNotify, cpuUtilNotify=cpuUtilNotify, swapUtilNotify=swapUtilNotify, iveMaxConcurrentUsersVirtualSystem=iveMaxConcurrentUsersVirtualSystem, ocspResponderConnectionFailed=ocspResponderConnectionFailed, iveFanNotify=iveFanNotify, ivePowerSupplyNotify=ivePowerSupplyNotify, iveRaidNotify=iveRaidNotify, iveClusterDisableNodeTrap=iveClusterDisableNodeTrap, iveClusterChangedVIPTrap=iveClusterChangedVIPTrap, iveNetExternalInterfaceDownTrap=iveNetExternalInterfaceDownTrap, iveClusterDeleteTrap=iveClusterDeleteTrap, iveNetInternalInterfaceDownTrap=iveNetInternalInterfaceDownTrap, iveNetManagementInterfaceDownTrap=iveNetManagementInterfaceDownTrap, iveTemperatureNotify=iveTemperatureNotify, iveVIPNodeChanged=iveVIPNodeChanged)

